<?xml version="1.0" encoding="utf-8"?>
<androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:fitsSystemWindows="true">

    <com.google.android.material.appbar.AppBarLayout
        android:id="@+id/appbarAnim"
        android:layout_width="match_parent"
        android:layout_height="192dp" >

        <!-- app:layout_scrollFlags
        scroll: this flag should be set for all views that want to scroll off-screen.
            For views that do not use this flag, they’ll remain pinned to the top of the screen.
        exitUntilCollapsed: causes the view to scroll off until it is ‘collapsed’
            before exiting
        snap: enables the expanded view to snap to either a collapsed state, or
            expanded state. There is no in-between state. If the View has been dragged
            more towards expanding, it expands completely. If its dragged more towards
            collapsing, the View collapses completely. -->
        <com.google.android.material.appbar.CollapsingToolbarLayout
            android:id="@+id/collapsingToolbarAnim"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            app:contentScrim="#3C3F41"
            app:expandedTitleTextAppearance="@style/AppTheme.ExpandedTitleTextAppearance"
            app:layout_scrollFlags="scroll|exitUntilCollapsed"
            app:title="HEY">

            <!-- Parallax Scrolling involves the background moving
            at a slower rate to the foreground.-->
            <ImageView
                android:id="@+id/imageView"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:scaleType="centerCrop"
                android:src="@drawable/bg_dark_forest"
                app:layout_collapseMode="parallax" />

            <!-- Use a Scrim for clear, readable Text (with a white background and white text)-->
            <!-- <View
                android:layout_width="match_parent"
                android:layout_height="90dp"
                android:layout_gravity="bottom"
                android:background="@drawable/scrim"
                />-->

            <!-- Toolbar must use collapseMode:pin, because we want
            it to persist and remain on top, as the user scrolls down.-->
            <androidx.appcompat.widget.Toolbar
                android:id="@+id/toolbarAnim"
                android:layout_width="match_parent"
                android:layout_height="?attr/actionBarSize"
                app:layout_collapseMode="pin" />

        </com.google.android.material.appbar.CollapsingToolbarLayout>
    </com.google.android.material.appbar.AppBarLayout>

    <androidx.core.widget.NestedScrollView
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:background="#F7000000"
        app:layout_behavior="@string/appbar_scrolling_view_behavior">

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:text="@string/lorem"
            android:textColor="@color/white"
            android:textSize="30sp"/>
    </androidx.core.widget.NestedScrollView>

    <com.google.android.material.floatingactionbutton.FloatingActionButton
        android:id="@+id/floatingActionButton"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginEnd="17dp"
        android:clickable="true"
        android:focusable="true"
        app:layout_anchor="@id/appbarAnim"
        app:layout_anchorGravity="bottom|end"
        app:srcCompat="@android:drawable/ic_dialog_info" />


</androidx.coordinatorlayout.widget.CoordinatorLayout>